import "common.proto";

package guiprotocol;

option java_package = "ca.site3.ssf.guiprotocol";


message Command {
  
  // corresponds to AbstractGameModelCommand classes
  enum CommandType {
    EXECUTE_GENERIC_ACTION = 0; // 
    EXECUTE_PLAYER_ACTION = 1;
    TOGGLE_PAUSE = 2;
    KILL_GAME = 3; // no args
    NEXT_STATE = 4; // no args
    TOUCH_EMITTER = 5; // FireEmitterType, emitterIndex, intensity, emitterEntities
    QUERY_GAME_INFO_REFRESH = 6;
  }  
  
  // for EXECUTE_PLAYER_ACTION (PlayerActionType)
  enum PlayerAction {
    BLOCK                = 0;
    JAB_ATTACK           = 1;
    HOOK_ATTACK          = 2;
    UPPERCUT_ATTACK      = 3;
    HADOUKEN_ATTACK      = 4;
    SONIC_BOOM_ATTACK    = 5;
    CHOP_ATTACK          = 6;
    SHORYUKEN_ATTACK     = 7;
    DOUBLE_LARIAT_ATTACK = 8;
    SUMO_HEADBUTT_ATTACK = 9;
    ONE_HUNDRED_HAND_SLAP_ATTACK = 10;
  }
  
  // for EXECUTE_ACTION or TOUCH_EMITTER
  enum Player {
    RINGMASTER = 0;
    P1 = 1;
    P2 = 2;
  }
  
  // for TOUCH_EMITTER
  enum FireEmitterType {
    LEFT_RAIL = 0;
    RIGHT_RAIL = 1;
    OUTER_RING = 2;
  }
  
  // Lets the deserializer know which fields (if any) to look for
  required CommandType type = 1;
  
  // EXECUTE_PLAYER_ACTION
  optional PlayerAction playerAction = 2;
  optional Player player = 3;
  optional bool leftHand = 4;
  optional bool rightHand = 5;
  
  // TOUCH_EMITTER
  optional FireEmitterType emitterType = 6;
  optional float intensity = 7;
  optional int32 emitterIndex = 8;
  repeated Player emitterEntities = 9;
  
  
  // EXECUTE_GENERIC_ACTION
  // Also uses: player, leftHand, rightHand
  optional float dmgPerFlame        = 10;
  optional int32 flameWidth         = 11;
  optional double durationInSeconds = 12;
  optional double acceleration      = 13;
  
  // NEXT_STATE
  optional GameState nextState = 14;
  
}