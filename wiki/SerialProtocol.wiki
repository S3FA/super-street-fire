#summary description of the serial protocol

= Introduction =

This is, right now, a collection of non-binding ideas that may change completely.


= Protocol =

ADDR:DATA

ADDR can be the source or destination address depending on whether it is an input or output node, i.e. an output node will put its own address in the field when sending data, and listen for messages with its address. Input nodes will listen for messages from certain addresses (e.g. the server will aggregate 1L/1R/1H/2L/2R/2H data).

DATA should be simple readable / regex-parseable text until we decide that this is way too slow (in terms of parsing or sending the data over the network) and need to pack it.

Node addresses:
 * 1L : Player 1 left glove
 * 1R : Player 1 right glove
 * 1H : Player 1 headset
 * 2L : Player 2 left glove
 * 2R : Player 2 right glove
 * 2H : Player 2 headset
 * 1C : Player 1 fire color control
 * 2C : Player 2 fire color control
 * FI : Fire control

Gloves:
 `1L:roll,pitch,yaw,accelx,accely,accelz,gyrox,gyroy,gyroz,magx,magy,magz`

Headsets:
 `1H:link,attention,meditation,band1,band2,band3,band4,band5,band6,band7,band8`
 * Maybe headsets have lights/outputs and can receive commands too?
  * Att>80, Med>80, special, gesture received, ...?

Fire and color control:
  2 bytes for fire control:     16[x x x x x x x x][x x x x x x x x]1
  2 bytes for player 1 color: 16[x x x x x x x x][x x x x x x x x]1
  2 bytes for player 2 color: 16[x x x x x x x x][x x x x x x x x]1

This needs to be sent out in an API packet. This command may be sufficient but I haven't tested it, the documentation isn't great:

xbee.send("tx", dest_addr=' , dest_addr_long=' ', data=' ');