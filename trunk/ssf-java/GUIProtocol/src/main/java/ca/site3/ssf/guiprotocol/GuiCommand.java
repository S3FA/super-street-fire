// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gui_command.proto

package ca.site3.ssf.guiprotocol;

public final class GuiCommand {
  private GuiCommand() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CommandOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .guiprotocol.Command.CommandType type = 1;
    boolean hasType();
    ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType getType();
    
    // optional .guiprotocol.Command.PlayerAction playerAction = 2;
    boolean hasPlayerAction();
    ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction getPlayerAction();
    
    // optional .guiprotocol.Player player = 3;
    boolean hasPlayer();
    ca.site3.ssf.guiprotocol.Common.Player getPlayer();
    
    // optional bool leftHand = 4;
    boolean hasLeftHand();
    boolean getLeftHand();
    
    // optional bool rightHand = 5;
    boolean hasRightHand();
    boolean getRightHand();
    
    // optional .guiprotocol.Command.FireEmitterType emitterType = 6;
    boolean hasEmitterType();
    ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType getEmitterType();
    
    // optional float intensity = 7;
    boolean hasIntensity();
    float getIntensity();
    
    // optional int32 emitterIndex = 8;
    boolean hasEmitterIndex();
    int getEmitterIndex();
    
    // repeated .guiprotocol.Player emitterEntities = 9;
    java.util.List<ca.site3.ssf.guiprotocol.Common.Player> getEmitterEntitiesList();
    int getEmitterEntitiesCount();
    ca.site3.ssf.guiprotocol.Common.Player getEmitterEntities(int index);
    
    // optional float dmgPerFlame = 10;
    boolean hasDmgPerFlame();
    float getDmgPerFlame();
    
    // optional int32 flameWidth = 11;
    boolean hasFlameWidth();
    int getFlameWidth();
    
    // optional double durationInSeconds = 12;
    boolean hasDurationInSeconds();
    double getDurationInSeconds();
    
    // optional double acceleration = 13;
    boolean hasAcceleration();
    double getAcceleration();
    
    // optional .guiprotocol.GameState nextState = 14;
    boolean hasNextState();
    ca.site3.ssf.guiprotocol.Common.GameState getNextState();
    
    // optional .guiprotocol.Command.RingmasterAction ringmasterAction = 15;
    boolean hasRingmasterAction();
    ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction getRingmasterAction();
    
    // optional bool unlimitedMovesOn = 16;
    boolean hasUnlimitedMovesOn();
    boolean getUnlimitedMovesOn();
  }
  public static final class Command extends
      com.google.protobuf.GeneratedMessage
      implements CommandOrBuilder {
    // Use Command.newBuilder() to construct.
    private Command(Builder builder) {
      super(builder);
    }
    private Command(boolean noInit) {}
    
    private static final Command defaultInstance;
    public static Command getDefaultInstance() {
      return defaultInstance;
    }
    
    public Command getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ca.site3.ssf.guiprotocol.GuiCommand.internal_static_guiprotocol_Command_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ca.site3.ssf.guiprotocol.GuiCommand.internal_static_guiprotocol_Command_fieldAccessorTable;
    }
    
    public enum CommandType
        implements com.google.protobuf.ProtocolMessageEnum {
      EXECUTE_GENERIC_ACTION(0, 0),
      EXECUTE_PLAYER_ACTION(1, 1),
      TOGGLE_PAUSE(2, 2),
      KILL_GAME(3, 3),
      NEXT_STATE(4, 4),
      TOUCH_EMITTER(5, 5),
      QUERY_GAME_INFO_REFRESH(6, 6),
      EXECUTE_RINGMASTER_ACTION(7, 7),
      QUERY_SYSTEM_INFO(8, 8),
      UPDATE_PLAYER_STATUS(9, 9),
      ;
      
      public static final int EXECUTE_GENERIC_ACTION_VALUE = 0;
      public static final int EXECUTE_PLAYER_ACTION_VALUE = 1;
      public static final int TOGGLE_PAUSE_VALUE = 2;
      public static final int KILL_GAME_VALUE = 3;
      public static final int NEXT_STATE_VALUE = 4;
      public static final int TOUCH_EMITTER_VALUE = 5;
      public static final int QUERY_GAME_INFO_REFRESH_VALUE = 6;
      public static final int EXECUTE_RINGMASTER_ACTION_VALUE = 7;
      public static final int QUERY_SYSTEM_INFO_VALUE = 8;
      public static final int UPDATE_PLAYER_STATUS_VALUE = 9;
      
      
      public final int getNumber() { return value; }
      
      public static CommandType valueOf(int value) {
        switch (value) {
          case 0: return EXECUTE_GENERIC_ACTION;
          case 1: return EXECUTE_PLAYER_ACTION;
          case 2: return TOGGLE_PAUSE;
          case 3: return KILL_GAME;
          case 4: return NEXT_STATE;
          case 5: return TOUCH_EMITTER;
          case 6: return QUERY_GAME_INFO_REFRESH;
          case 7: return EXECUTE_RINGMASTER_ACTION;
          case 8: return QUERY_SYSTEM_INFO;
          case 9: return UPDATE_PLAYER_STATUS;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<CommandType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<CommandType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CommandType>() {
              public CommandType findValueByNumber(int number) {
                return CommandType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ca.site3.ssf.guiprotocol.GuiCommand.Command.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final CommandType[] VALUES = {
        EXECUTE_GENERIC_ACTION, EXECUTE_PLAYER_ACTION, TOGGLE_PAUSE, KILL_GAME, NEXT_STATE, TOUCH_EMITTER, QUERY_GAME_INFO_REFRESH, EXECUTE_RINGMASTER_ACTION, QUERY_SYSTEM_INFO, UPDATE_PLAYER_STATUS, 
      };
      
      public static CommandType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private CommandType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:guiprotocol.Command.CommandType)
    }
    
    public enum PlayerAction
        implements com.google.protobuf.ProtocolMessageEnum {
      BLOCK(0, 0),
      JAB_ATTACK(1, 1),
      HOOK_ATTACK(2, 2),
      UPPERCUT_ATTACK(3, 3),
      CHOP_ATTACK(4, 4),
      HADOUKEN_ATTACK(5, 5),
      SONIC_BOOM_ATTACK(6, 6),
      SHORYUKEN_ATTACK(7, 7),
      DOUBLE_LARIAT_ATTACK(8, 8),
      QUADRUPLE_LARIAT_ATTACK(9, 9),
      SUMO_HEADBUTT_ATTACK(10, 10),
      ONE_HUNDRED_HAND_SLAP_ATTACK(11, 11),
      PSYCHO_CRUSHER_ATTACK(12, 12),
      YMCA_ATTACK(13, 13),
      NYAN_CAT_ATTACK(14, 14),
      DISCO_STU_ATTACK(15, 15),
      ARM_WINDMILL_ATTACK(16, 16),
      SUCK_IT_ATTACK(17, 17),
      VAFANAPOLI_ATTACK(18, 18),
      ;
      
      public static final int BLOCK_VALUE = 0;
      public static final int JAB_ATTACK_VALUE = 1;
      public static final int HOOK_ATTACK_VALUE = 2;
      public static final int UPPERCUT_ATTACK_VALUE = 3;
      public static final int CHOP_ATTACK_VALUE = 4;
      public static final int HADOUKEN_ATTACK_VALUE = 5;
      public static final int SONIC_BOOM_ATTACK_VALUE = 6;
      public static final int SHORYUKEN_ATTACK_VALUE = 7;
      public static final int DOUBLE_LARIAT_ATTACK_VALUE = 8;
      public static final int QUADRUPLE_LARIAT_ATTACK_VALUE = 9;
      public static final int SUMO_HEADBUTT_ATTACK_VALUE = 10;
      public static final int ONE_HUNDRED_HAND_SLAP_ATTACK_VALUE = 11;
      public static final int PSYCHO_CRUSHER_ATTACK_VALUE = 12;
      public static final int YMCA_ATTACK_VALUE = 13;
      public static final int NYAN_CAT_ATTACK_VALUE = 14;
      public static final int DISCO_STU_ATTACK_VALUE = 15;
      public static final int ARM_WINDMILL_ATTACK_VALUE = 16;
      public static final int SUCK_IT_ATTACK_VALUE = 17;
      public static final int VAFANAPOLI_ATTACK_VALUE = 18;
      
      
      public final int getNumber() { return value; }
      
      public static PlayerAction valueOf(int value) {
        switch (value) {
          case 0: return BLOCK;
          case 1: return JAB_ATTACK;
          case 2: return HOOK_ATTACK;
          case 3: return UPPERCUT_ATTACK;
          case 4: return CHOP_ATTACK;
          case 5: return HADOUKEN_ATTACK;
          case 6: return SONIC_BOOM_ATTACK;
          case 7: return SHORYUKEN_ATTACK;
          case 8: return DOUBLE_LARIAT_ATTACK;
          case 9: return QUADRUPLE_LARIAT_ATTACK;
          case 10: return SUMO_HEADBUTT_ATTACK;
          case 11: return ONE_HUNDRED_HAND_SLAP_ATTACK;
          case 12: return PSYCHO_CRUSHER_ATTACK;
          case 13: return YMCA_ATTACK;
          case 14: return NYAN_CAT_ATTACK;
          case 15: return DISCO_STU_ATTACK;
          case 16: return ARM_WINDMILL_ATTACK;
          case 17: return SUCK_IT_ATTACK;
          case 18: return VAFANAPOLI_ATTACK;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<PlayerAction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PlayerAction>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PlayerAction>() {
              public PlayerAction findValueByNumber(int number) {
                return PlayerAction.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ca.site3.ssf.guiprotocol.GuiCommand.Command.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final PlayerAction[] VALUES = {
        BLOCK, JAB_ATTACK, HOOK_ATTACK, UPPERCUT_ATTACK, CHOP_ATTACK, HADOUKEN_ATTACK, SONIC_BOOM_ATTACK, SHORYUKEN_ATTACK, DOUBLE_LARIAT_ATTACK, QUADRUPLE_LARIAT_ATTACK, SUMO_HEADBUTT_ATTACK, ONE_HUNDRED_HAND_SLAP_ATTACK, PSYCHO_CRUSHER_ATTACK, YMCA_ATTACK, NYAN_CAT_ATTACK, DISCO_STU_ATTACK, ARM_WINDMILL_ATTACK, SUCK_IT_ATTACK, VAFANAPOLI_ATTACK, 
      };
      
      public static PlayerAction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private PlayerAction(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:guiprotocol.Command.PlayerAction)
    }
    
    public enum RingmasterAction
        implements com.google.protobuf.ProtocolMessageEnum {
      HALF_RING_ACTION(0, 0),
      JAB_ACTION(1, 1),
      ERUPTION_ACTION(2, 2),
      CIRCLE_ACTION(3, 3),
      HADOUKEN_ACTION(4, 4),
      DRUM_ACTION(5, 5),
      ;
      
      public static final int HALF_RING_ACTION_VALUE = 0;
      public static final int JAB_ACTION_VALUE = 1;
      public static final int ERUPTION_ACTION_VALUE = 2;
      public static final int CIRCLE_ACTION_VALUE = 3;
      public static final int HADOUKEN_ACTION_VALUE = 4;
      public static final int DRUM_ACTION_VALUE = 5;
      
      
      public final int getNumber() { return value; }
      
      public static RingmasterAction valueOf(int value) {
        switch (value) {
          case 0: return HALF_RING_ACTION;
          case 1: return JAB_ACTION;
          case 2: return ERUPTION_ACTION;
          case 3: return CIRCLE_ACTION;
          case 4: return HADOUKEN_ACTION;
          case 5: return DRUM_ACTION;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RingmasterAction>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RingmasterAction>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RingmasterAction>() {
              public RingmasterAction findValueByNumber(int number) {
                return RingmasterAction.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ca.site3.ssf.guiprotocol.GuiCommand.Command.getDescriptor().getEnumTypes().get(2);
      }
      
      private static final RingmasterAction[] VALUES = {
        HALF_RING_ACTION, JAB_ACTION, ERUPTION_ACTION, CIRCLE_ACTION, HADOUKEN_ACTION, DRUM_ACTION, 
      };
      
      public static RingmasterAction valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private RingmasterAction(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:guiprotocol.Command.RingmasterAction)
    }
    
    public enum FireEmitterType
        implements com.google.protobuf.ProtocolMessageEnum {
      LEFT_RAIL(0, 0),
      RIGHT_RAIL(1, 1),
      OUTER_RING(2, 2),
      ;
      
      public static final int LEFT_RAIL_VALUE = 0;
      public static final int RIGHT_RAIL_VALUE = 1;
      public static final int OUTER_RING_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static FireEmitterType valueOf(int value) {
        switch (value) {
          case 0: return LEFT_RAIL;
          case 1: return RIGHT_RAIL;
          case 2: return OUTER_RING;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<FireEmitterType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<FireEmitterType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FireEmitterType>() {
              public FireEmitterType findValueByNumber(int number) {
                return FireEmitterType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ca.site3.ssf.guiprotocol.GuiCommand.Command.getDescriptor().getEnumTypes().get(3);
      }
      
      private static final FireEmitterType[] VALUES = {
        LEFT_RAIL, RIGHT_RAIL, OUTER_RING, 
      };
      
      public static FireEmitterType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private FireEmitterType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:guiprotocol.Command.FireEmitterType)
    }
    
    private int bitField0_;
    // required .guiprotocol.Command.CommandType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType getType() {
      return type_;
    }
    
    // optional .guiprotocol.Command.PlayerAction playerAction = 2;
    public static final int PLAYERACTION_FIELD_NUMBER = 2;
    private ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction playerAction_;
    public boolean hasPlayerAction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction getPlayerAction() {
      return playerAction_;
    }
    
    // optional .guiprotocol.Player player = 3;
    public static final int PLAYER_FIELD_NUMBER = 3;
    private ca.site3.ssf.guiprotocol.Common.Player player_;
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public ca.site3.ssf.guiprotocol.Common.Player getPlayer() {
      return player_;
    }
    
    // optional bool leftHand = 4;
    public static final int LEFTHAND_FIELD_NUMBER = 4;
    private boolean leftHand_;
    public boolean hasLeftHand() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getLeftHand() {
      return leftHand_;
    }
    
    // optional bool rightHand = 5;
    public static final int RIGHTHAND_FIELD_NUMBER = 5;
    private boolean rightHand_;
    public boolean hasRightHand() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getRightHand() {
      return rightHand_;
    }
    
    // optional .guiprotocol.Command.FireEmitterType emitterType = 6;
    public static final int EMITTERTYPE_FIELD_NUMBER = 6;
    private ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType emitterType_;
    public boolean hasEmitterType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType getEmitterType() {
      return emitterType_;
    }
    
    // optional float intensity = 7;
    public static final int INTENSITY_FIELD_NUMBER = 7;
    private float intensity_;
    public boolean hasIntensity() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getIntensity() {
      return intensity_;
    }
    
    // optional int32 emitterIndex = 8;
    public static final int EMITTERINDEX_FIELD_NUMBER = 8;
    private int emitterIndex_;
    public boolean hasEmitterIndex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getEmitterIndex() {
      return emitterIndex_;
    }
    
    // repeated .guiprotocol.Player emitterEntities = 9;
    public static final int EMITTERENTITIES_FIELD_NUMBER = 9;
    private java.util.List<ca.site3.ssf.guiprotocol.Common.Player> emitterEntities_;
    public java.util.List<ca.site3.ssf.guiprotocol.Common.Player> getEmitterEntitiesList() {
      return emitterEntities_;
    }
    public int getEmitterEntitiesCount() {
      return emitterEntities_.size();
    }
    public ca.site3.ssf.guiprotocol.Common.Player getEmitterEntities(int index) {
      return emitterEntities_.get(index);
    }
    
    // optional float dmgPerFlame = 10;
    public static final int DMGPERFLAME_FIELD_NUMBER = 10;
    private float dmgPerFlame_;
    public boolean hasDmgPerFlame() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public float getDmgPerFlame() {
      return dmgPerFlame_;
    }
    
    // optional int32 flameWidth = 11;
    public static final int FLAMEWIDTH_FIELD_NUMBER = 11;
    private int flameWidth_;
    public boolean hasFlameWidth() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getFlameWidth() {
      return flameWidth_;
    }
    
    // optional double durationInSeconds = 12;
    public static final int DURATIONINSECONDS_FIELD_NUMBER = 12;
    private double durationInSeconds_;
    public boolean hasDurationInSeconds() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public double getDurationInSeconds() {
      return durationInSeconds_;
    }
    
    // optional double acceleration = 13;
    public static final int ACCELERATION_FIELD_NUMBER = 13;
    private double acceleration_;
    public boolean hasAcceleration() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public double getAcceleration() {
      return acceleration_;
    }
    
    // optional .guiprotocol.GameState nextState = 14;
    public static final int NEXTSTATE_FIELD_NUMBER = 14;
    private ca.site3.ssf.guiprotocol.Common.GameState nextState_;
    public boolean hasNextState() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public ca.site3.ssf.guiprotocol.Common.GameState getNextState() {
      return nextState_;
    }
    
    // optional .guiprotocol.Command.RingmasterAction ringmasterAction = 15;
    public static final int RINGMASTERACTION_FIELD_NUMBER = 15;
    private ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction ringmasterAction_;
    public boolean hasRingmasterAction() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction getRingmasterAction() {
      return ringmasterAction_;
    }
    
    // optional bool unlimitedMovesOn = 16;
    public static final int UNLIMITEDMOVESON_FIELD_NUMBER = 16;
    private boolean unlimitedMovesOn_;
    public boolean hasUnlimitedMovesOn() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getUnlimitedMovesOn() {
      return unlimitedMovesOn_;
    }
    
    private void initFields() {
      type_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType.EXECUTE_GENERIC_ACTION;
      playerAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction.BLOCK;
      player_ = ca.site3.ssf.guiprotocol.Common.Player.RINGMASTER;
      leftHand_ = false;
      rightHand_ = false;
      emitterType_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType.LEFT_RAIL;
      intensity_ = 0F;
      emitterIndex_ = 0;
      emitterEntities_ = java.util.Collections.emptyList();
      dmgPerFlame_ = 0F;
      flameWidth_ = 0;
      durationInSeconds_ = 0D;
      acceleration_ = 0D;
      nextState_ = ca.site3.ssf.guiprotocol.Common.GameState.NO_STATE;
      ringmasterAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction.HALF_RING_ACTION;
      unlimitedMovesOn_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, playerAction_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, player_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, leftHand_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, rightHand_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, emitterType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, intensity_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, emitterIndex_);
      }
      for (int i = 0; i < emitterEntities_.size(); i++) {
        output.writeEnum(9, emitterEntities_.get(i).getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(10, dmgPerFlame_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, flameWidth_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(12, durationInSeconds_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(13, acceleration_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(14, nextState_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(15, ringmasterAction_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(16, unlimitedMovesOn_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, playerAction_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, player_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, leftHand_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, rightHand_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, emitterType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, intensity_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, emitterIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < emitterEntities_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(emitterEntities_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * emitterEntities_.size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, dmgPerFlame_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, flameWidth_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, durationInSeconds_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, acceleration_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, nextState_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, ringmasterAction_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, unlimitedMovesOn_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ca.site3.ssf.guiprotocol.GuiCommand.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ca.site3.ssf.guiprotocol.GuiCommand.Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ca.site3.ssf.guiprotocol.GuiCommand.CommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ca.site3.ssf.guiprotocol.GuiCommand.internal_static_guiprotocol_Command_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ca.site3.ssf.guiprotocol.GuiCommand.internal_static_guiprotocol_Command_fieldAccessorTable;
      }
      
      // Construct using ca.site3.ssf.guiprotocol.GuiCommand.Command.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType.EXECUTE_GENERIC_ACTION;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction.BLOCK;
        bitField0_ = (bitField0_ & ~0x00000002);
        player_ = ca.site3.ssf.guiprotocol.Common.Player.RINGMASTER;
        bitField0_ = (bitField0_ & ~0x00000004);
        leftHand_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        rightHand_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        emitterType_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType.LEFT_RAIL;
        bitField0_ = (bitField0_ & ~0x00000020);
        intensity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        emitterIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        emitterEntities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        dmgPerFlame_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        flameWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        durationInSeconds_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        acceleration_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        nextState_ = ca.site3.ssf.guiprotocol.Common.GameState.NO_STATE;
        bitField0_ = (bitField0_ & ~0x00002000);
        ringmasterAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction.HALF_RING_ACTION;
        bitField0_ = (bitField0_ & ~0x00004000);
        unlimitedMovesOn_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ca.site3.ssf.guiprotocol.GuiCommand.Command.getDescriptor();
      }
      
      public ca.site3.ssf.guiprotocol.GuiCommand.Command getDefaultInstanceForType() {
        return ca.site3.ssf.guiprotocol.GuiCommand.Command.getDefaultInstance();
      }
      
      public ca.site3.ssf.guiprotocol.GuiCommand.Command build() {
        ca.site3.ssf.guiprotocol.GuiCommand.Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private ca.site3.ssf.guiprotocol.GuiCommand.Command buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        ca.site3.ssf.guiprotocol.GuiCommand.Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public ca.site3.ssf.guiprotocol.GuiCommand.Command buildPartial() {
        ca.site3.ssf.guiprotocol.GuiCommand.Command result = new ca.site3.ssf.guiprotocol.GuiCommand.Command(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerAction_ = playerAction_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.leftHand_ = leftHand_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rightHand_ = rightHand_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.emitterType_ = emitterType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.intensity_ = intensity_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.emitterIndex_ = emitterIndex_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          emitterEntities_ = java.util.Collections.unmodifiableList(emitterEntities_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.emitterEntities_ = emitterEntities_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.dmgPerFlame_ = dmgPerFlame_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.flameWidth_ = flameWidth_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.durationInSeconds_ = durationInSeconds_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.acceleration_ = acceleration_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.nextState_ = nextState_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.ringmasterAction_ = ringmasterAction_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.unlimitedMovesOn_ = unlimitedMovesOn_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ca.site3.ssf.guiprotocol.GuiCommand.Command) {
          return mergeFrom((ca.site3.ssf.guiprotocol.GuiCommand.Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ca.site3.ssf.guiprotocol.GuiCommand.Command other) {
        if (other == ca.site3.ssf.guiprotocol.GuiCommand.Command.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPlayerAction()) {
          setPlayerAction(other.getPlayerAction());
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasLeftHand()) {
          setLeftHand(other.getLeftHand());
        }
        if (other.hasRightHand()) {
          setRightHand(other.getRightHand());
        }
        if (other.hasEmitterType()) {
          setEmitterType(other.getEmitterType());
        }
        if (other.hasIntensity()) {
          setIntensity(other.getIntensity());
        }
        if (other.hasEmitterIndex()) {
          setEmitterIndex(other.getEmitterIndex());
        }
        if (!other.emitterEntities_.isEmpty()) {
          if (emitterEntities_.isEmpty()) {
            emitterEntities_ = other.emitterEntities_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureEmitterEntitiesIsMutable();
            emitterEntities_.addAll(other.emitterEntities_);
          }
          onChanged();
        }
        if (other.hasDmgPerFlame()) {
          setDmgPerFlame(other.getDmgPerFlame());
        }
        if (other.hasFlameWidth()) {
          setFlameWidth(other.getFlameWidth());
        }
        if (other.hasDurationInSeconds()) {
          setDurationInSeconds(other.getDurationInSeconds());
        }
        if (other.hasAcceleration()) {
          setAcceleration(other.getAcceleration());
        }
        if (other.hasNextState()) {
          setNextState(other.getNextState());
        }
        if (other.hasRingmasterAction()) {
          setRingmasterAction(other.getRingmasterAction());
        }
        if (other.hasUnlimitedMovesOn()) {
          setUnlimitedMovesOn(other.getUnlimitedMovesOn());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType value = ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction value = ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                playerAction_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.Common.Player value = ca.site3.ssf.guiprotocol.Common.Player.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                player_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              leftHand_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rightHand_ = input.readBool();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType value = ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                emitterType_ = value;
              }
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              intensity_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              emitterIndex_ = input.readInt32();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.Common.Player value = ca.site3.ssf.guiprotocol.Common.Player.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                addEmitterEntities(value);
              }
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                ca.site3.ssf.guiprotocol.Common.Player value = ca.site3.ssf.guiprotocol.Common.Player.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(9, rawValue);
                } else {
                  addEmitterEntities(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              dmgPerFlame_ = input.readFloat();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              flameWidth_ = input.readInt32();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              durationInSeconds_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              acceleration_ = input.readDouble();
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.Common.GameState value = ca.site3.ssf.guiprotocol.Common.GameState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                nextState_ = value;
              }
              break;
            }
            case 120: {
              int rawValue = input.readEnum();
              ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction value = ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(15, rawValue);
              } else {
                bitField0_ |= 0x00004000;
                ringmasterAction_ = value;
              }
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              unlimitedMovesOn_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .guiprotocol.Command.CommandType type = 1;
      private ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType type_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType.EXECUTE_GENERIC_ACTION;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType getType() {
        return type_;
      }
      public Builder setType(ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.CommandType.EXECUTE_GENERIC_ACTION;
        onChanged();
        return this;
      }
      
      // optional .guiprotocol.Command.PlayerAction playerAction = 2;
      private ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction playerAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction.BLOCK;
      public boolean hasPlayerAction() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction getPlayerAction() {
        return playerAction_;
      }
      public Builder setPlayerAction(ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        playerAction_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayerAction() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.PlayerAction.BLOCK;
        onChanged();
        return this;
      }
      
      // optional .guiprotocol.Player player = 3;
      private ca.site3.ssf.guiprotocol.Common.Player player_ = ca.site3.ssf.guiprotocol.Common.Player.RINGMASTER;
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public ca.site3.ssf.guiprotocol.Common.Player getPlayer() {
        return player_;
      }
      public Builder setPlayer(ca.site3.ssf.guiprotocol.Common.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        player_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        player_ = ca.site3.ssf.guiprotocol.Common.Player.RINGMASTER;
        onChanged();
        return this;
      }
      
      // optional bool leftHand = 4;
      private boolean leftHand_ ;
      public boolean hasLeftHand() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getLeftHand() {
        return leftHand_;
      }
      public Builder setLeftHand(boolean value) {
        bitField0_ |= 0x00000008;
        leftHand_ = value;
        onChanged();
        return this;
      }
      public Builder clearLeftHand() {
        bitField0_ = (bitField0_ & ~0x00000008);
        leftHand_ = false;
        onChanged();
        return this;
      }
      
      // optional bool rightHand = 5;
      private boolean rightHand_ ;
      public boolean hasRightHand() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getRightHand() {
        return rightHand_;
      }
      public Builder setRightHand(boolean value) {
        bitField0_ |= 0x00000010;
        rightHand_ = value;
        onChanged();
        return this;
      }
      public Builder clearRightHand() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rightHand_ = false;
        onChanged();
        return this;
      }
      
      // optional .guiprotocol.Command.FireEmitterType emitterType = 6;
      private ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType emitterType_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType.LEFT_RAIL;
      public boolean hasEmitterType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType getEmitterType() {
        return emitterType_;
      }
      public Builder setEmitterType(ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        emitterType_ = value;
        onChanged();
        return this;
      }
      public Builder clearEmitterType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        emitterType_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.FireEmitterType.LEFT_RAIL;
        onChanged();
        return this;
      }
      
      // optional float intensity = 7;
      private float intensity_ ;
      public boolean hasIntensity() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getIntensity() {
        return intensity_;
      }
      public Builder setIntensity(float value) {
        bitField0_ |= 0x00000040;
        intensity_ = value;
        onChanged();
        return this;
      }
      public Builder clearIntensity() {
        bitField0_ = (bitField0_ & ~0x00000040);
        intensity_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 emitterIndex = 8;
      private int emitterIndex_ ;
      public boolean hasEmitterIndex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getEmitterIndex() {
        return emitterIndex_;
      }
      public Builder setEmitterIndex(int value) {
        bitField0_ |= 0x00000080;
        emitterIndex_ = value;
        onChanged();
        return this;
      }
      public Builder clearEmitterIndex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        emitterIndex_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .guiprotocol.Player emitterEntities = 9;
      private java.util.List<ca.site3.ssf.guiprotocol.Common.Player> emitterEntities_ =
        java.util.Collections.emptyList();
      private void ensureEmitterEntitiesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          emitterEntities_ = new java.util.ArrayList<ca.site3.ssf.guiprotocol.Common.Player>(emitterEntities_);
          bitField0_ |= 0x00000100;
        }
      }
      public java.util.List<ca.site3.ssf.guiprotocol.Common.Player> getEmitterEntitiesList() {
        return java.util.Collections.unmodifiableList(emitterEntities_);
      }
      public int getEmitterEntitiesCount() {
        return emitterEntities_.size();
      }
      public ca.site3.ssf.guiprotocol.Common.Player getEmitterEntities(int index) {
        return emitterEntities_.get(index);
      }
      public Builder setEmitterEntities(
          int index, ca.site3.ssf.guiprotocol.Common.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmitterEntitiesIsMutable();
        emitterEntities_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addEmitterEntities(ca.site3.ssf.guiprotocol.Common.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEmitterEntitiesIsMutable();
        emitterEntities_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllEmitterEntities(
          java.lang.Iterable<? extends ca.site3.ssf.guiprotocol.Common.Player> values) {
        ensureEmitterEntitiesIsMutable();
        super.addAll(values, emitterEntities_);
        onChanged();
        return this;
      }
      public Builder clearEmitterEntities() {
        emitterEntities_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      
      // optional float dmgPerFlame = 10;
      private float dmgPerFlame_ ;
      public boolean hasDmgPerFlame() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public float getDmgPerFlame() {
        return dmgPerFlame_;
      }
      public Builder setDmgPerFlame(float value) {
        bitField0_ |= 0x00000200;
        dmgPerFlame_ = value;
        onChanged();
        return this;
      }
      public Builder clearDmgPerFlame() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dmgPerFlame_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 flameWidth = 11;
      private int flameWidth_ ;
      public boolean hasFlameWidth() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getFlameWidth() {
        return flameWidth_;
      }
      public Builder setFlameWidth(int value) {
        bitField0_ |= 0x00000400;
        flameWidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearFlameWidth() {
        bitField0_ = (bitField0_ & ~0x00000400);
        flameWidth_ = 0;
        onChanged();
        return this;
      }
      
      // optional double durationInSeconds = 12;
      private double durationInSeconds_ ;
      public boolean hasDurationInSeconds() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public double getDurationInSeconds() {
        return durationInSeconds_;
      }
      public Builder setDurationInSeconds(double value) {
        bitField0_ |= 0x00000800;
        durationInSeconds_ = value;
        onChanged();
        return this;
      }
      public Builder clearDurationInSeconds() {
        bitField0_ = (bitField0_ & ~0x00000800);
        durationInSeconds_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double acceleration = 13;
      private double acceleration_ ;
      public boolean hasAcceleration() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public double getAcceleration() {
        return acceleration_;
      }
      public Builder setAcceleration(double value) {
        bitField0_ |= 0x00001000;
        acceleration_ = value;
        onChanged();
        return this;
      }
      public Builder clearAcceleration() {
        bitField0_ = (bitField0_ & ~0x00001000);
        acceleration_ = 0D;
        onChanged();
        return this;
      }
      
      // optional .guiprotocol.GameState nextState = 14;
      private ca.site3.ssf.guiprotocol.Common.GameState nextState_ = ca.site3.ssf.guiprotocol.Common.GameState.NO_STATE;
      public boolean hasNextState() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public ca.site3.ssf.guiprotocol.Common.GameState getNextState() {
        return nextState_;
      }
      public Builder setNextState(ca.site3.ssf.guiprotocol.Common.GameState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        nextState_ = value;
        onChanged();
        return this;
      }
      public Builder clearNextState() {
        bitField0_ = (bitField0_ & ~0x00002000);
        nextState_ = ca.site3.ssf.guiprotocol.Common.GameState.NO_STATE;
        onChanged();
        return this;
      }
      
      // optional .guiprotocol.Command.RingmasterAction ringmasterAction = 15;
      private ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction ringmasterAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction.HALF_RING_ACTION;
      public boolean hasRingmasterAction() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction getRingmasterAction() {
        return ringmasterAction_;
      }
      public Builder setRingmasterAction(ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00004000;
        ringmasterAction_ = value;
        onChanged();
        return this;
      }
      public Builder clearRingmasterAction() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ringmasterAction_ = ca.site3.ssf.guiprotocol.GuiCommand.Command.RingmasterAction.HALF_RING_ACTION;
        onChanged();
        return this;
      }
      
      // optional bool unlimitedMovesOn = 16;
      private boolean unlimitedMovesOn_ ;
      public boolean hasUnlimitedMovesOn() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public boolean getUnlimitedMovesOn() {
        return unlimitedMovesOn_;
      }
      public Builder setUnlimitedMovesOn(boolean value) {
        bitField0_ |= 0x00008000;
        unlimitedMovesOn_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnlimitedMovesOn() {
        bitField0_ = (bitField0_ & ~0x00008000);
        unlimitedMovesOn_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:guiprotocol.Command)
    }
    
    static {
      defaultInstance = new Command(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:guiprotocol.Command)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_guiprotocol_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_guiprotocol_Command_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021gui_command.proto\022\013guiprotocol\032\014common" +
      ".proto\"\244\013\n\007Command\022.\n\004type\030\001 \002(\0162 .guipr" +
      "otocol.Command.CommandType\0227\n\014playerActi" +
      "on\030\002 \001(\0162!.guiprotocol.Command.PlayerAct" +
      "ion\022#\n\006player\030\003 \001(\0162\023.guiprotocol.Player" +
      "\022\020\n\010leftHand\030\004 \001(\010\022\021\n\trightHand\030\005 \001(\010\0229\n" +
      "\013emitterType\030\006 \001(\0162$.guiprotocol.Command" +
      ".FireEmitterType\022\021\n\tintensity\030\007 \001(\002\022\024\n\014e" +
      "mitterIndex\030\010 \001(\005\022,\n\017emitterEntities\030\t \003" +
      "(\0162\023.guiprotocol.Player\022\023\n\013dmgPerFlame\030\n",
      " \001(\002\022\022\n\nflameWidth\030\013 \001(\005\022\031\n\021durationInSe" +
      "conds\030\014 \001(\001\022\024\n\014acceleration\030\r \001(\001\022)\n\tnex" +
      "tState\030\016 \001(\0162\026.guiprotocol.GameState\022?\n\020" +
      "ringmasterAction\030\017 \001(\0162%.guiprotocol.Com" +
      "mand.RingmasterAction\022\030\n\020unlimitedMovesO" +
      "n\030\020 \001(\010\"\365\001\n\013CommandType\022\032\n\026EXECUTE_GENER" +
      "IC_ACTION\020\000\022\031\n\025EXECUTE_PLAYER_ACTION\020\001\022\020" +
      "\n\014TOGGLE_PAUSE\020\002\022\r\n\tKILL_GAME\020\003\022\016\n\nNEXT_" +
      "STATE\020\004\022\021\n\rTOUCH_EMITTER\020\005\022\033\n\027QUERY_GAME" +
      "_INFO_REFRESH\020\006\022\035\n\031EXECUTE_RINGMASTER_AC",
      "TION\020\007\022\025\n\021QUERY_SYSTEM_INFO\020\010\022\030\n\024UPDATE_" +
      "PLAYER_STATUS\020\t\"\260\003\n\014PlayerAction\022\t\n\005BLOC" +
      "K\020\000\022\016\n\nJAB_ATTACK\020\001\022\017\n\013HOOK_ATTACK\020\002\022\023\n\017" +
      "UPPERCUT_ATTACK\020\003\022\017\n\013CHOP_ATTACK\020\004\022\023\n\017HA" +
      "DOUKEN_ATTACK\020\005\022\025\n\021SONIC_BOOM_ATTACK\020\006\022\024" +
      "\n\020SHORYUKEN_ATTACK\020\007\022\030\n\024DOUBLE_LARIAT_AT" +
      "TACK\020\010\022\033\n\027QUADRUPLE_LARIAT_ATTACK\020\t\022\030\n\024S" +
      "UMO_HEADBUTT_ATTACK\020\n\022 \n\034ONE_HUNDRED_HAN" +
      "D_SLAP_ATTACK\020\013\022\031\n\025PSYCHO_CRUSHER_ATTACK" +
      "\020\014\022\017\n\013YMCA_ATTACK\020\r\022\023\n\017NYAN_CAT_ATTACK\020\016",
      "\022\024\n\020DISCO_STU_ATTACK\020\017\022\027\n\023ARM_WINDMILL_A" +
      "TTACK\020\020\022\022\n\016SUCK_IT_ATTACK\020\021\022\025\n\021VAFANAPOL" +
      "I_ATTACK\020\022\"\206\001\n\020RingmasterAction\022\024\n\020HALF_" +
      "RING_ACTION\020\000\022\016\n\nJAB_ACTION\020\001\022\023\n\017ERUPTIO" +
      "N_ACTION\020\002\022\021\n\rCIRCLE_ACTION\020\003\022\023\n\017HADOUKE" +
      "N_ACTION\020\004\022\017\n\013DRUM_ACTION\020\005\"@\n\017FireEmitt" +
      "erType\022\r\n\tLEFT_RAIL\020\000\022\016\n\nRIGHT_RAIL\020\001\022\016\n" +
      "\nOUTER_RING\020\002B\032\n\030ca.site3.ssf.guiprotoco" +
      "l"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_guiprotocol_Command_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_guiprotocol_Command_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_guiprotocol_Command_descriptor,
              new java.lang.String[] { "Type", "PlayerAction", "Player", "LeftHand", "RightHand", "EmitterType", "Intensity", "EmitterIndex", "EmitterEntities", "DmgPerFlame", "FlameWidth", "DurationInSeconds", "Acceleration", "NextState", "RingmasterAction", "UnlimitedMovesOn", },
              ca.site3.ssf.guiprotocol.GuiCommand.Command.class,
              ca.site3.ssf.guiprotocol.GuiCommand.Command.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ca.site3.ssf.guiprotocol.Common.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
