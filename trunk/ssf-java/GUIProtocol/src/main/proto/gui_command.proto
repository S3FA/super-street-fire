import "common.proto";

package guiprotocol;

option java_package = "ca.site3.ssf.guiprotocol";


message Command {
  
  // corresponds to AbstractGameModelCommand classes
  enum CommandType {
    EXECUTE_GENERIC_ACTION    = 0;  // player, leftHand, rightHand, dmgPerFlame, flameWidth, durationInSeconds, acceleration
    EXECUTE_PLAYER_ACTION     = 1;  // playerAction, player, leftHand, rightHand
    TOGGLE_PAUSE              = 2;  // no args
    KILL_GAME                 = 3;  // no args
    NEXT_STATE                = 4;  // no args
    TOUCH_EMITTER             = 5;  // FireEmitterType, emitterIndex, intensity, emitterEntities
    QUERY_GAME_INFO_REFRESH   = 6;  // no args
    EXECUTE_RINGMASTER_ACTION = 7;  // ringmasterAction, leftHand, rightHand
    QUERY_SYSTEM_INFO         = 8;  // no args
    UPDATE_PLAYER_STATUS      = 9;  // player, godModeOn, unlimitedMovesOn
  }  
  
  // For EXECUTE_PLAYER_ACTION (PlayerActionType)
  enum PlayerAction {
    
    // Basic Actions
    BLOCK           = 0;
    JAB_ATTACK      = 1;
    HOOK_ATTACK     = 2;
    UPPERCUT_ATTACK = 3;
    CHOP_ATTACK     = 4;
    
    // Special Actions
    HADOUKEN_ATTACK              = 5;
    SONIC_BOOM_ATTACK            = 6;
    SHORYUKEN_ATTACK             = 7;
    DOUBLE_LARIAT_ATTACK         = 8;
    QUADRUPLE_LARIAT_ATTACK      = 9;
    SUMO_HEADBUTT_ATTACK         = 10;
    ONE_HUNDRED_HAND_SLAP_ATTACK = 11;
    PSYCHO_CRUSHER_ATTACK        = 12;
    
    // Easter Egg Actions
    YMCA_ATTACK         = 13;
    NYAN_CAT_ATTACK     = 14;
    DISCO_STU_ATTACK    = 15;
    ARM_WINDMILL_ATTACK = 16;
    SUCK_IT_ATTACK      = 17;
    VAFANAPOLI_ATTACK   = 18;
  }
  
  // For EXECUTE_RINGMASTER_ACTION
  enum RingmasterAction {
    HALF_RING_ACTION = 0;
    JAB_ACTION       = 1;
    ERUPTION_ACTION  = 2;
    CIRCLE_ACTION    = 3;
    HADOUKEN_ACTION  = 4;
    DRUM_ACTION      = 5;
  }
  
  // For TOUCH_EMITTER
  enum FireEmitterType {
    LEFT_RAIL = 0;
    RIGHT_RAIL = 1;
    OUTER_RING = 2;
  }
  
  // Lets the deserializer know which fields (if any) to look for
  required CommandType type = 1;
  
  // EXECUTE_PLAYER_ACTION
  optional PlayerAction playerAction = 2;
  optional Player player = 3;
  
  // EXECUTE_PLAYER_ACTION and EXECUTE_RINGMASTER_ACTION
  optional bool leftHand = 4;
  optional bool rightHand = 5;
  
  // TOUCH_EMITTER
  optional FireEmitterType emitterType = 6;
  optional float intensity = 7;
  optional int32 emitterIndex = 8;
  repeated Player emitterEntities = 9;
  
  
  // EXECUTE_GENERIC_ACTION
  // Also uses: player, leftHand, rightHand
  optional float dmgPerFlame        = 10;
  optional int32 flameWidth         = 11;
  optional double durationInSeconds = 12;
  optional double acceleration      = 13;
  
  // NEXT_STATE
  optional GameState nextState = 14;
  
  // EXECUTE_RINGMASTER_ACTION
  optional RingmasterAction ringmasterAction = 15;
  
  // UPDATE_PLAYER_STATUS
  optional bool unlimitedMovesOn = 16;
}